// Code generated by protoc-gen-go. DO NOT EDIT.
// source: pluginDB.proto

package pluginDBgRPCApi

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

// Used for defining the current version of the proto-file
type CurrentVersionEnum int32

const (
	CurrentVersionEnum_VERSION_0_1_0 CurrentVersionEnum = 0
)

var CurrentVersionEnum_name = map[int32]string{
	0: "VERSION_0_1_0",
}

var CurrentVersionEnum_value = map[string]int32{
	"VERSION_0_1_0": 0,
}

func (x CurrentVersionEnum) String() string {
	return proto.EnumName(CurrentVersionEnum_name, int32(x))
}

func (CurrentVersionEnum) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_506f60f0cdd82b2e, []int{0}
}

// How the value should be saved
type ValueSaveTypeEnum int32

const (
	ValueSaveTypeEnum_BYTEARRAY ValueSaveTypeEnum = 0
	ValueSaveTypeEnum_STRING    ValueSaveTypeEnum = 1
	ValueSaveTypeEnum_BOTH      ValueSaveTypeEnum = 2
)

var ValueSaveTypeEnum_name = map[int32]string{
	0: "BYTEARRAY",
	1: "STRING",
	2: "BOTH",
}

var ValueSaveTypeEnum_value = map[string]int32{
	"BYTEARRAY": 0,
	"STRING":    1,
	"BOTH":      2,
}

func (x ValueSaveTypeEnum) String() string {
	return proto.EnumName(ValueSaveTypeEnum_name, int32(x))
}

func (ValueSaveTypeEnum) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_506f60f0cdd82b2e, []int{1}
}

// Message used for saving data into KeyValueStore
type WriteKeyValueMessage struct {
	Key                  string             `protobuf:"bytes,1,opt,name=Key,proto3" json:"Key,omitempty"`
	Bucket               string             `protobuf:"bytes,2,opt,name=Bucket,proto3" json:"Bucket,omitempty"`
	ValueSaveType        ValueSaveTypeEnum  `protobuf:"varint,3,opt,name=ValueSaveType,proto3,enum=pluginDBgRPCApi.ValueSaveTypeEnum" json:"ValueSaveType,omitempty"`
	Value                []byte             `protobuf:"bytes,4,opt,name=Value,proto3" json:"Value,omitempty"`
	ValueString          string             `protobuf:"bytes,5,opt,name=ValueString,proto3" json:"ValueString,omitempty"`
	CurrentVersion       CurrentVersionEnum `protobuf:"varint,6,opt,name=CurrentVersion,proto3,enum=pluginDBgRPCApi.CurrentVersionEnum" json:"CurrentVersion,omitempty"`
	XXX_NoUnkeyedLiteral struct{}           `json:"-"`
	XXX_unrecognized     []byte             `json:"-"`
	XXX_sizecache        int32              `json:"-"`
}

func (m *WriteKeyValueMessage) Reset()         { *m = WriteKeyValueMessage{} }
func (m *WriteKeyValueMessage) String() string { return proto.CompactTextString(m) }
func (*WriteKeyValueMessage) ProtoMessage()    {}
func (*WriteKeyValueMessage) Descriptor() ([]byte, []int) {
	return fileDescriptor_506f60f0cdd82b2e, []int{0}
}

func (m *WriteKeyValueMessage) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_WriteKeyValueMessage.Unmarshal(m, b)
}
func (m *WriteKeyValueMessage) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_WriteKeyValueMessage.Marshal(b, m, deterministic)
}
func (m *WriteKeyValueMessage) XXX_Merge(src proto.Message) {
	xxx_messageInfo_WriteKeyValueMessage.Merge(m, src)
}
func (m *WriteKeyValueMessage) XXX_Size() int {
	return xxx_messageInfo_WriteKeyValueMessage.Size(m)
}
func (m *WriteKeyValueMessage) XXX_DiscardUnknown() {
	xxx_messageInfo_WriteKeyValueMessage.DiscardUnknown(m)
}

var xxx_messageInfo_WriteKeyValueMessage proto.InternalMessageInfo

func (m *WriteKeyValueMessage) GetKey() string {
	if m != nil {
		return m.Key
	}
	return ""
}

func (m *WriteKeyValueMessage) GetBucket() string {
	if m != nil {
		return m.Bucket
	}
	return ""
}

func (m *WriteKeyValueMessage) GetValueSaveType() ValueSaveTypeEnum {
	if m != nil {
		return m.ValueSaveType
	}
	return ValueSaveTypeEnum_BYTEARRAY
}

func (m *WriteKeyValueMessage) GetValue() []byte {
	if m != nil {
		return m.Value
	}
	return nil
}

func (m *WriteKeyValueMessage) GetValueString() string {
	if m != nil {
		return m.ValueString
	}
	return ""
}

func (m *WriteKeyValueMessage) GetCurrentVersion() CurrentVersionEnum {
	if m != nil {
		return m.CurrentVersion
	}
	return CurrentVersionEnum_VERSION_0_1_0
}

// Message used for reading data from KeyValueStore
type ReadKeyRequestMessage struct {
	Key                  string             `protobuf:"bytes,1,opt,name=Key,proto3" json:"Key,omitempty"`
	Bucket               string             `protobuf:"bytes,2,opt,name=Bucket,proto3" json:"Bucket,omitempty"`
	CurrentVersion       CurrentVersionEnum `protobuf:"varint,3,opt,name=CurrentVersion,proto3,enum=pluginDBgRPCApi.CurrentVersionEnum" json:"CurrentVersion,omitempty"`
	XXX_NoUnkeyedLiteral struct{}           `json:"-"`
	XXX_unrecognized     []byte             `json:"-"`
	XXX_sizecache        int32              `json:"-"`
}

func (m *ReadKeyRequestMessage) Reset()         { *m = ReadKeyRequestMessage{} }
func (m *ReadKeyRequestMessage) String() string { return proto.CompactTextString(m) }
func (*ReadKeyRequestMessage) ProtoMessage()    {}
func (*ReadKeyRequestMessage) Descriptor() ([]byte, []int) {
	return fileDescriptor_506f60f0cdd82b2e, []int{1}
}

func (m *ReadKeyRequestMessage) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ReadKeyRequestMessage.Unmarshal(m, b)
}
func (m *ReadKeyRequestMessage) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ReadKeyRequestMessage.Marshal(b, m, deterministic)
}
func (m *ReadKeyRequestMessage) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ReadKeyRequestMessage.Merge(m, src)
}
func (m *ReadKeyRequestMessage) XXX_Size() int {
	return xxx_messageInfo_ReadKeyRequestMessage.Size(m)
}
func (m *ReadKeyRequestMessage) XXX_DiscardUnknown() {
	xxx_messageInfo_ReadKeyRequestMessage.DiscardUnknown(m)
}

var xxx_messageInfo_ReadKeyRequestMessage proto.InternalMessageInfo

func (m *ReadKeyRequestMessage) GetKey() string {
	if m != nil {
		return m.Key
	}
	return ""
}

func (m *ReadKeyRequestMessage) GetBucket() string {
	if m != nil {
		return m.Bucket
	}
	return ""
}

func (m *ReadKeyRequestMessage) GetCurrentVersion() CurrentVersionEnum {
	if m != nil {
		return m.CurrentVersion
	}
	return CurrentVersionEnum_VERSION_0_1_0
}

// Message used for returning data from KeyValueStore
type ValueResponseMessage struct {
	Key                  string            `protobuf:"bytes,1,opt,name=Key,proto3" json:"Key,omitempty"`
	Bucket               string            `protobuf:"bytes,2,opt,name=Bucket,proto3" json:"Bucket,omitempty"`
	ValueSaveType        ValueSaveTypeEnum `protobuf:"varint,3,opt,name=ValueSaveType,proto3,enum=pluginDBgRPCApi.ValueSaveTypeEnum" json:"ValueSaveType,omitempty"`
	Value                []byte            `protobuf:"bytes,4,opt,name=Value,proto3" json:"Value,omitempty"`
	ValueString          string            `protobuf:"bytes,5,opt,name=ValueString,proto3" json:"ValueString,omitempty"`
	UpdatedDateTime      string            `protobuf:"bytes,6,opt,name=updatedDateTime,proto3" json:"updatedDateTime,omitempty"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *ValueResponseMessage) Reset()         { *m = ValueResponseMessage{} }
func (m *ValueResponseMessage) String() string { return proto.CompactTextString(m) }
func (*ValueResponseMessage) ProtoMessage()    {}
func (*ValueResponseMessage) Descriptor() ([]byte, []int) {
	return fileDescriptor_506f60f0cdd82b2e, []int{2}
}

func (m *ValueResponseMessage) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ValueResponseMessage.Unmarshal(m, b)
}
func (m *ValueResponseMessage) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ValueResponseMessage.Marshal(b, m, deterministic)
}
func (m *ValueResponseMessage) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ValueResponseMessage.Merge(m, src)
}
func (m *ValueResponseMessage) XXX_Size() int {
	return xxx_messageInfo_ValueResponseMessage.Size(m)
}
func (m *ValueResponseMessage) XXX_DiscardUnknown() {
	xxx_messageInfo_ValueResponseMessage.DiscardUnknown(m)
}

var xxx_messageInfo_ValueResponseMessage proto.InternalMessageInfo

func (m *ValueResponseMessage) GetKey() string {
	if m != nil {
		return m.Key
	}
	return ""
}

func (m *ValueResponseMessage) GetBucket() string {
	if m != nil {
		return m.Bucket
	}
	return ""
}

func (m *ValueResponseMessage) GetValueSaveType() ValueSaveTypeEnum {
	if m != nil {
		return m.ValueSaveType
	}
	return ValueSaveTypeEnum_BYTEARRAY
}

func (m *ValueResponseMessage) GetValue() []byte {
	if m != nil {
		return m.Value
	}
	return nil
}

func (m *ValueResponseMessage) GetValueString() string {
	if m != nil {
		return m.ValueString
	}
	return ""
}

func (m *ValueResponseMessage) GetUpdatedDateTime() string {
	if m != nil {
		return m.UpdatedDateTime
	}
	return ""
}

// Ack/Nack- Response message with comment
type AckNackResponse struct {
	Acknack              bool     `protobuf:"varint,1,opt,name=acknack,proto3" json:"acknack,omitempty"`
	Comments             string   `protobuf:"bytes,2,opt,name=comments,proto3" json:"comments,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *AckNackResponse) Reset()         { *m = AckNackResponse{} }
func (m *AckNackResponse) String() string { return proto.CompactTextString(m) }
func (*AckNackResponse) ProtoMessage()    {}
func (*AckNackResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_506f60f0cdd82b2e, []int{3}
}

func (m *AckNackResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AckNackResponse.Unmarshal(m, b)
}
func (m *AckNackResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AckNackResponse.Marshal(b, m, deterministic)
}
func (m *AckNackResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AckNackResponse.Merge(m, src)
}
func (m *AckNackResponse) XXX_Size() int {
	return xxx_messageInfo_AckNackResponse.Size(m)
}
func (m *AckNackResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_AckNackResponse.DiscardUnknown(m)
}

var xxx_messageInfo_AckNackResponse proto.InternalMessageInfo

func (m *AckNackResponse) GetAcknack() bool {
	if m != nil {
		return m.Acknack
	}
	return false
}

func (m *AckNackResponse) GetComments() string {
	if m != nil {
		return m.Comments
	}
	return ""
}

func init() {
	proto.RegisterEnum("pluginDBgRPCApi.CurrentVersionEnum", CurrentVersionEnum_name, CurrentVersionEnum_value)
	proto.RegisterEnum("pluginDBgRPCApi.ValueSaveTypeEnum", ValueSaveTypeEnum_name, ValueSaveTypeEnum_value)
	proto.RegisterType((*WriteKeyValueMessage)(nil), "pluginDBgRPCApi.WriteKeyValueMessage")
	proto.RegisterType((*ReadKeyRequestMessage)(nil), "pluginDBgRPCApi.ReadKeyRequestMessage")
	proto.RegisterType((*ValueResponseMessage)(nil), "pluginDBgRPCApi.ValueResponseMessage")
	proto.RegisterType((*AckNackResponse)(nil), "pluginDBgRPCApi.AckNackResponse")
}

func init() { proto.RegisterFile("pluginDB.proto", fileDescriptor_506f60f0cdd82b2e) }

var fileDescriptor_506f60f0cdd82b2e = []byte{
	// 440 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xd4, 0x54, 0xc1, 0x6e, 0xda, 0x40,
	0x10, 0xc5, 0x90, 0x50, 0x98, 0x16, 0x70, 0x46, 0xb4, 0xb2, 0x38, 0x59, 0xae, 0xd2, 0xa2, 0x1c,
	0x50, 0x9a, 0x5e, 0x7a, 0x85, 0x84, 0x26, 0x11, 0x2a, 0x89, 0x16, 0x8b, 0x2a, 0x27, 0xb4, 0x35,
	0x23, 0x6a, 0x19, 0xef, 0xba, 0xeb, 0x75, 0x25, 0x7e, 0xa2, 0xfd, 0xbc, 0xfe, 0x44, 0x3f, 0xa2,
	0xea, 0x02, 0x55, 0x6d, 0x73, 0x69, 0x6f, 0xb9, 0xed, 0x1b, 0xcd, 0x68, 0xde, 0x7b, 0x33, 0xb3,
	0xd0, 0x4e, 0xd6, 0xd9, 0x2a, 0x14, 0x57, 0xa3, 0x41, 0xa2, 0xa4, 0x96, 0xd8, 0xd9, 0xe3, 0x15,
	0xbb, 0xbf, 0x1c, 0x26, 0xa1, 0xf7, 0xbd, 0x0a, 0xdd, 0x8f, 0x2a, 0xd4, 0x34, 0xa1, 0xcd, 0x9c,
	0xaf, 0x33, 0xfa, 0x40, 0x69, 0xca, 0x57, 0x84, 0x36, 0xd4, 0x26, 0xb4, 0x71, 0x2c, 0xd7, 0xea,
	0x37, 0xd9, 0xef, 0x27, 0xbe, 0x80, 0xfa, 0x28, 0x0b, 0x22, 0xd2, 0x4e, 0xd5, 0x04, 0x77, 0x08,
	0x6f, 0xa0, 0x65, 0x2a, 0x67, 0xfc, 0x2b, 0xf9, 0x9b, 0x84, 0x9c, 0x9a, 0x6b, 0xf5, 0xdb, 0x17,
	0xde, 0xa0, 0xd0, 0x6b, 0x90, 0xcb, 0x1a, 0x8b, 0x2c, 0x66, 0xf9, 0x42, 0xec, 0xc2, 0xb1, 0x09,
	0x38, 0x47, 0xae, 0xd5, 0x7f, 0xc6, 0xb6, 0x00, 0x5d, 0x78, 0xba, 0x4d, 0xd3, 0x2a, 0x14, 0x2b,
	0xe7, 0xd8, 0x34, 0xff, 0x3b, 0x84, 0x13, 0x68, 0x5f, 0x66, 0x4a, 0x91, 0xd0, 0x73, 0x52, 0x69,
	0x28, 0x85, 0x53, 0x37, 0x14, 0x5e, 0x96, 0x28, 0xe4, 0xd3, 0x0c, 0x87, 0x42, 0xa9, 0xf7, 0xcd,
	0x82, 0xe7, 0x8c, 0xf8, 0x72, 0x42, 0x1b, 0x46, 0x5f, 0x32, 0x4a, 0xf5, 0xbf, 0x5b, 0x52, 0x26,
	0x54, 0xfb, 0x7f, 0x42, 0x3f, 0x2d, 0xe8, 0x1a, 0xb5, 0x8c, 0xd2, 0x44, 0x8a, 0xf4, 0x51, 0x8e,
	0xa8, 0x0f, 0x9d, 0x2c, 0x59, 0x72, 0x4d, 0xcb, 0x2b, 0xae, 0xc9, 0x0f, 0x63, 0x32, 0x33, 0x6a,
	0xb2, 0x62, 0xd8, 0xbb, 0x86, 0xce, 0x30, 0x88, 0xa6, 0x3c, 0x88, 0xf6, 0x7a, 0xd1, 0x81, 0x27,
	0x3c, 0x88, 0x04, 0x0f, 0x22, 0x23, 0xb6, 0xc1, 0xf6, 0x10, 0x7b, 0xd0, 0x08, 0x64, 0x1c, 0x93,
	0xd0, 0xe9, 0x4e, 0xf2, 0x1f, 0x7c, 0xf6, 0x1a, 0xb0, 0xec, 0x2e, 0x9e, 0x40, 0x6b, 0x3e, 0x66,
	0xb3, 0xdb, 0xbb, 0xe9, 0xe2, 0x7c, 0xf1, 0x66, 0x71, 0x6e, 0x57, 0xce, 0xde, 0xc1, 0x49, 0x49,
	0x37, 0xb6, 0xa0, 0x39, 0x7a, 0xf0, 0xc7, 0x43, 0xc6, 0x86, 0x0f, 0x76, 0x05, 0x01, 0xea, 0x33,
	0x9f, 0xdd, 0x4e, 0xaf, 0x6d, 0x0b, 0x1b, 0x70, 0x34, 0xba, 0xf3, 0x6f, 0xec, 0xea, 0xc5, 0x0f,
	0x0b, 0x1a, 0xf7, 0x3b, 0x0b, 0x91, 0xef, 0x2e, 0xc9, 0x97, 0xfb, 0x5b, 0x9a, 0x69, 0xa9, 0x08,
	0x4f, 0x4b, 0x2e, 0x1f, 0x3a, 0xb8, 0x9e, 0x5b, 0x4a, 0x2b, 0xd8, 0xe0, 0x55, 0xf0, 0xf3, 0x76,
	0x35, 0xdf, 0x2b, 0x19, 0xe7, 0x7b, 0xbc, 0x2a, 0x15, 0x1f, 0x5c, 0xe1, 0xde, 0xe9, 0xe1, 0x89,
	0x17, 0x36, 0xcb, 0xab, 0x7c, 0xaa, 0x9b, 0xff, 0xe2, 0xed, 0xaf, 0x00, 0x00, 0x00, 0xff, 0xff,
	0x18, 0xd9, 0xc5, 0x2e, 0x41, 0x04, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// PluginDBClient is the client API for PluginDB service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type PluginDBClient interface {
	// ***********************************************************************************
	// Save Data method
	// ***********************************************************************************
	WriteToKeyValueStore(ctx context.Context, in *WriteKeyValueMessage, opts ...grpc.CallOption) (*AckNackResponse, error)
	// ***********************************************************************************
	// Read Data Method
	// ***********************************************************************************
	ReadFromKeyValueStore(ctx context.Context, in *ReadKeyRequestMessage, opts ...grpc.CallOption) (*ValueResponseMessage, error)
}

type pluginDBClient struct {
	cc *grpc.ClientConn
}

func NewPluginDBClient(cc *grpc.ClientConn) PluginDBClient {
	return &pluginDBClient{cc}
}

func (c *pluginDBClient) WriteToKeyValueStore(ctx context.Context, in *WriteKeyValueMessage, opts ...grpc.CallOption) (*AckNackResponse, error) {
	out := new(AckNackResponse)
	err := c.cc.Invoke(ctx, "/pluginDBgRPCApi.PluginDB/WriteToKeyValueStore", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *pluginDBClient) ReadFromKeyValueStore(ctx context.Context, in *ReadKeyRequestMessage, opts ...grpc.CallOption) (*ValueResponseMessage, error) {
	out := new(ValueResponseMessage)
	err := c.cc.Invoke(ctx, "/pluginDBgRPCApi.PluginDB/ReadFromKeyValueStore", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// PluginDBServer is the server API for PluginDB service.
type PluginDBServer interface {
	// ***********************************************************************************
	// Save Data method
	// ***********************************************************************************
	WriteToKeyValueStore(context.Context, *WriteKeyValueMessage) (*AckNackResponse, error)
	// ***********************************************************************************
	// Read Data Method
	// ***********************************************************************************
	ReadFromKeyValueStore(context.Context, *ReadKeyRequestMessage) (*ValueResponseMessage, error)
}

func RegisterPluginDBServer(s *grpc.Server, srv PluginDBServer) {
	s.RegisterService(&_PluginDB_serviceDesc, srv)
}

func _PluginDB_WriteToKeyValueStore_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(WriteKeyValueMessage)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PluginDBServer).WriteToKeyValueStore(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pluginDBgRPCApi.PluginDB/WriteToKeyValueStore",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PluginDBServer).WriteToKeyValueStore(ctx, req.(*WriteKeyValueMessage))
	}
	return interceptor(ctx, in, info, handler)
}

func _PluginDB_ReadFromKeyValueStore_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ReadKeyRequestMessage)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PluginDBServer).ReadFromKeyValueStore(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pluginDBgRPCApi.PluginDB/ReadFromKeyValueStore",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PluginDBServer).ReadFromKeyValueStore(ctx, req.(*ReadKeyRequestMessage))
	}
	return interceptor(ctx, in, info, handler)
}

var _PluginDB_serviceDesc = grpc.ServiceDesc{
	ServiceName: "pluginDBgRPCApi.PluginDB",
	HandlerType: (*PluginDBServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "WriteToKeyValueStore",
			Handler:    _PluginDB_WriteToKeyValueStore_Handler,
		},
		{
			MethodName: "ReadFromKeyValueStore",
			Handler:    _PluginDB_ReadFromKeyValueStore_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "pluginDB.proto",
}
